import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class Solution {
    public static Map<Character, String> map = new HashMap<Character, String>() {{
        put('2', "abc");
        put('3', "def");
        put('4', "ghi");
        put('5', "jkl");
        put('6', "mno");
        put('7', "pqrs");
        put('8', "tuv");
        put('9', "wxyz");
    }};
    
    // rest of your code remains the same
    public static ArrayList<String> combinations(String s){
        // base case
        if (s.length() == 0) {
            return new ArrayList<>();
        }

        ArrayList<String> result = new ArrayList<>();
        helper(0, s, result, "");
        return result;
    }

    // Helper Function
    private static void helper(int idx, String s, ArrayList<String> result, String current){
        if (current.length() == s.length()) {
            result.add(current);
            return;
        } else if (idx >= s.length()) {
            return;
        } else {
            String digit = map.get(s.charAt(idx));
            if (digit != null) {
                for (char ch : digit.toCharArray()) {
                    helper(idx + 1, s, result, current + ch);
                }
            }
        }
    }
}
