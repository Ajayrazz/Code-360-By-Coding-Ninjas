import java.util.*;
public class Solution {
	public static int cutRod(int price[], int n) {
		// Write your code here.
		int[][] dp = new int[n][n + 1];
		for(int[] row : dp){
			Arrays.fill(row, -1);
		}

		return cutRodUtil(n - 1, n, price, dp);
	}

	public static int cutRodUtil(int idx, int n, int[] price, int[][] dp){
		if(idx == 0){
			return n * price[0];
		}

		if(dp[idx][n] != -1){
			return dp[idx][n];
		}

		int notTaken = cutRodUtil(idx - 1, n, price, dp);
		int rod_length = idx + 1;
		int taken = Integer.MIN_VALUE;

		if(rod_length <= n){
			taken = price[idx] + cutRodUtil(idx, n - rod_length, price, dp);
		}

		return dp[idx][n] = Math.max(taken, notTaken);
	}
}
