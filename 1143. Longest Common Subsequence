class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int n = text1.length();
        int m = text2.length();

        int[][] dp = new int[n + 1][m + 1];
        for(int[] row : dp){
            Arrays.fill(row, -1);
        }

        for(int i = 0; i <= n; i++){
            dp[i][0] = 0;
        }

        for(int j = 0; j <= m; j++){
            dp[0][j] = 0;
        }

        for(int idx1 = 1; idx1 <= n; idx1++){
            for(int idx2 = 1; idx2 <= m; idx2++){
                if(text1.charAt(idx1 - 1) == text2.charAt(idx2 - 1)){
                    dp[idx1][idx2] = 1 + dp[idx1 - 1][idx2 - 1];
                }
                else {
                    dp[idx1][idx2] = Math.max(dp[idx1 - 1][idx2], dp[idx1][idx2 - 1]);
                }
            }
        }

        return dp[n][m];
    }
}
